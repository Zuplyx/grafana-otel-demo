plugins {
	id 'org.springframework.boot' version '3.2.0'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'java'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
	toolchain {
		// specify JVM to use. If no matching version is found locally, one will be downloaded (see settings.gradle for resolver configuration)
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

tasks.named("bootRun") {
	def agent = "$projectDir/agent/opentelemetry-javaagent.jar"
	jvmArgs "-javaagent:$agent"
	// enable native histogram feature
	environment.put('OTEL_EXPORTER_OTLP_METRICS_DEFAULT_HISTOGRAM_AGGREGATION', 'base2_exponential_bucket_histogram')
	environment.put('OTEL_SEMCONV_STABILITY_OPT_IN', 'http')
}

dependencyManagement {
	imports {
		mavenBom("io.opentelemetry:opentelemetry-bom:1.37.0")
	}
}


dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation("io.opentelemetry:opentelemetry-api")
	runtimeOnly('com.mysql:mysql-connector-j:8.3.0')
}
